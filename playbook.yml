---
- hosts: all
  gather_facts: true
  become: true
  roles:
    - role: marcus-grant.common-packages
    - role: geerlingguy.ntp
    - role: geerlingguy.docker
      when: >
        ansible_os_family == "Debian" or
        ansible_os_family == "RedHat"

- hosts: homeservers
  gather_facts: true
  become: true
  vars_files:
    - group_vars/vault.yml
  handlers:
    - import_tasks: handlers.yml
  tasks:
    - include_tasks: tasks/docker_post_install.yml
    - include_role:
        name: marcus-grant.mydotfiles
#   when: docker_install | default(False)
# - include_role:
#     name: roles/docker-on-traefik
#   when: traefik_enabled | default(False)
# - include_role: name=roles/nextcloud-on-docker
#   when: nextcloud_enabled | default(False)

# run for only the ansible user
- hosts: homeservers
  gather_facts: true
  vars_files:
    - group_vars/vault.yml
  handlers:
    - import_tasks: handlers.yml
  tasks:
    - include_role:
        name: marcus-grant.mydotfiles

- hosts: frigg
  gather_facts: true
  become: true
  vars_files:
    - group_vars/vault.yml
  handlers:
    - import_tasks: handlers.yml
  tasks:
    - include_role: name=roles/qemu
      when: qemu_install


# - hosts: ocean
#   gather_facts: true
#   become: true
#   vars_files:
#     - group_vars/vault.yml
#   handlers:
#     - import_tasks: handlers.yml
#   tasks:
#     # - include_tasks: tasks/ufw-traefik.yml
#     # - include_tasks: tasks/docker_post_install.yml
#     #   when: docker_install | default(False)
#     # - include_role:
#     #     name: roles/docker-on-traefik
#     #   when: traefik_enabled | default(False)
#     - include_role: name=roles/s3fs-mount
#       when: s3fs_mounts is defined and (s3fs_mounts | length > 0)
#     - include_role: name=roles/nextcloud-on-docker
#       when: nextcloud_enabled | default(False)

# - hosts: frigg
#   gather_facts: true
#   become: true
#   roles:
#     - role: roles/qemu


# These are workstations that double as servers with different handling
# - hosts: workstations
#   gather_facts: true
#   tasks:
#     - name: docker is instaled using pacman
#       pacman:
#         name: docker
#         state: present
