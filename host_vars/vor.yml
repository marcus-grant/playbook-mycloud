### General variables

# Ansible Settings
ansible_python_interpreter: auto

# # Domains
# base_domain: '{{ vault_base_domain_hetzner }}'

# time_zone: America/New_York
time_zone: Europe/Stockholm
# admin_user: '{{ vault_admin_user }}'

# Hbox Configs
# hbox_ssh_key_name: '{{ vault_hbox_ssh_key_name }}'
# hbox_remote_user: '{{ vault_boks_user }}'
hbox_mount_point: /mnt/hbox

### NTP Settings
ntp_enabled: true  # (true) | false don't use on containerized VM (docker/vbox)
ntp_timezone: '{{ time_zone }}'  # (Etc/UTC) | many others
ntp_manage_config: false  # (false) | true, whether to manage /etc/ntp.conf
ntp_area: 'se'  # defaults to none (world), check http://bit.ly/2Hyqoh0 for others
# ntp_servers:  # defaults to below world pool (only works manage config)
#   - "0{{ '.' + ntp_area if ntp_area else '' }}.pool.ntp.org iburst"
#   - "1{{ '.' + ntp_area if ntp_area else '' }}.pool.ntp.org iburst"
#   - "2{{ '.' + ntp_area if ntp_area else '' }}.pool.ntp.org iburst"
#   - "3{{ '.' + ntp_area if ntp_area else '' }}.pool.ntp.org iburst"
ntp_restrict:  # whitelists access for these hosts, loopback only by default
  - "127.0.0.1"
  - "::1"

### MySQL Geerling
# https://github.com/geerlingguy/ansible-role-mysql
mysql_user_home: /root
mysql_root_username: root
# mysql_root_password: '{{ vault_mysql_root_password }}'
mysql_enabled_on_startup: true
mysql_packages:  # This sets up mariaDB as the MySQL replacement
  - mariadb-client
  - mariadb-server
  - python3-mysqldb
  - python-mysqldb


### General Settings
# Use this to enable or disable admin user access, forcing sudo & root
docker_group_admin_user: false  # disable docker group access for admin
docker_edition: 'ce'  # ce or ee
# docker_home: /mnt/docker
# docker_image_directory: '{{ docker_home }}/images'
docker_storage_driver: overlay2
docker_package_state: latest  # present, absent, or latest
docker_service_state: started  # (started) | stopped *
docker_service_enabled: true  # (yes/true) | no/false *
docker_restart_handler_state: restarted  # what to do with service after role
docker_install_compose: true  # (true) | false
docker_compose_path: /usr/local/bin/docker-compose  # path to compose bin
docker_default_network: www

### Docker Socket Proxy
docker_socket_proxy_enabled: false # TODO: Test this, haven't confirmed it works
docker_socket_proxy_name: socket-proxy
docker_socket_proxy_network: socket-proxy
docker_socket_proxy_port: '2375'
docker_socket_proxy_image: tecnativa/docker-socket-proxy:latest


### Traefik
traefik_setup: true
traefik_debug: false
traefik_api_port: '8880' # Marked for removal if not used in template
# traefik_admin_email: '{{ vault_admin_email }}'
# traefik_admin_htpasswd: '{{ vault_traefik_admin_htpasswd }}'
traefik_image: traefik:2.4.8
# These are merely the default location pointing to the tasks--
# named volume 'traefik' in the default /var/lib/docker/volumes location.
traefik_volume_dir: /var/lib/docker/volumes/traefik
traefik_data_dir: '{{ traefik_volume_dir }}/_data'
traefik_public_network: '{{ docker_default_network }}'
traefik_open_dashboard_port: true

### Git/Gitea
gitea_enabled: true
git_gid: 10002
git_uid: 10002
# git_user_passwd: '{{ vault_git_user_passwd }}'
# git_db_passwd: '{{ vault_git_db_passwd }}'
git_indexer_enable: true
git_docker_network: '{{ traefik_public_network }}'
git_subdomain: 'git'
git_port_http: '3000'
git_port_ssh: '48513'

### Installer Role (Context-Less Program Installs)
installed_packages:
        - python3
        - python3-setuptools
        - python3-pip
        - python3-docker
        - git
        - vim
        - fd-find
        - fzf

### Dotfiles
dotfiles_local_root_dir: '~/.dots'
dotfiles_git_server_base_url: 'github.com'
dotfiles_git_username: 'marcus-grant'
dotfiles_use_ssh: true
dotfiles:
  bash:
    repo_name: 'dots-bash'
    local_subdir_name: 'bash'
    version: 'main'
    links:
      - {dest: '~/.bashrc', src: '~/.dots/bash/bashrc.bash'}
      - {dest: '~/.bash_profile', src: '~/.dots/bash/bashprofile.bash'}
  vim:
    repo_name: 'dots-vim'
    local_subdir_name: 'vim'
    version: 'main'
    links:
      - {dest: '~/.vim', src: '~/.dots/vim'}
      - {dest: '~/.vimrc', src: '~/.dots/vim/vimrc'}
  tmux:
    repo_name: 'dots-tmux'
    local_subdir_name: 'tmux'
    version: 'main'
    links:
      - {dest: '~/.tmux', src: '~/.dots/tmux'}
      - {dest: '~/.tmux.conf', src: '~/.dots/tmux/.tmux.conf'}