---
# General variables
time_zone: America/New_York

# dotfiles role variables
dotfiles_local_root_dir: '~/.dots'
dotfiles_git_server_base_url: 'github.com'
dotfiles_git_username: 'marcus-grant'
dotfiles_use_ssh: true
dotfiles:
  bash:
    repo_name: 'dots-bash'
    local_subdir_name: 'bash'
    version: 'master'
    links:
      - { dest: '~/.bashrc', src: '~/.dots/bash/bashrc' }
      - { dest: '~/.profile', src: '~/.dots/bash/profile' }
      - { dest: '~/.bash_profile', src: '~/.dots/bash/bash_profile' }
  vim:
    repo_name: 'dots-vim'
    local_subdir_name: 'vim'
    version: 'master'
    links:
      - { dest: '~/.vim', src: '~/.dots/vim' }
      - { dest: '~/.vimrc', src: '~/.dots/vim/vimrc' }
  neovim:
    repo_name: 'dots-neovim'
    local_subdir_name: 'neovim'
    version: 'master'
    links:
      - { dest: '~/.config/nvim', src: '~/.dots/neovim' }
  tmux:
    repo_name: 'dots-tmux'
    local_subdir_name: 'tmux'
    version: 'master'
    links:
      - { dest: '~/.tmux.conf', src: '~/.dots/tmux/.tmux.conf' }
      - { dest: '~/.tmux.conf.local', src: '~/.dots/tmux/.tmux.conf.local' }
  
# ntp role http://bit.ly/2HBSJ67 <- README
ntp_enabled: yes # (true) | false don't use on containerized VM (docker/virtbox)
ntp_timezone: '{{ time_zone }}' # (Etc/UTC) | many others
ntp_manage_config: yes # (false) | true, whether to manage /etc/ntp.conf
ntp_area: '' # defaults to none (world), check http://bit.ly/2Hyqoh0 for others
ntp_servers: # defaults to below world pool (only works manage config)
  - "0{{ '.' + ntp_area if ntp_area else '' }}.pool.ntp.org iburst"
  - "1{{ '.' + ntp_area if ntp_area else '' }}.pool.ntp.org iburst"
  - "2{{ '.' + ntp_area if ntp_area else '' }}.pool.ntp.org iburst"
  - "3{{ '.' + ntp_area if ntp_area else '' }}.pool.ntp.org iburst"
ntp_restrict: # whitelists access for these hosts, loopback only by default
  - "127.0.0.1"
  - "::1"

# pip role vars
# this can also include other pip packages
pip_install_packages:
  - name: docker
  - name: docker-py

###
### Docker Install & Daemon Settings
###
docker_install: yes
docker_edition: 'ce' # ce or ee
docker_home: /mnt/docker
docker_image_directory: '{{ docker_home }}/images'
docker_storage_driver: overlay2
docker_package_state: latest # present, absent, or latest
docker_service_state: started # (started) | stopped *
docker_service_enabled: yes # (yes/true) | no/false *
docker_restart_handler_state: restarted # what to do with service after role
docker_install_compose: yes # (true) | false
#docker_users: # use to add users to docker group
# docker_compose_version: "1.22.0" defaults to latest, just leave blank for now
docker_compose_path: /usr/local/bin/docker-compose # path to compose bin


###
### Portainer Docker Settings
###
portainer_enabled: yes
portainer_docker_directory: '{{ docker_home }}/portainer/config'
portainer_traefik_enabled: no
# portainer_memory: 768M # TODO: Come up with sensible memory limit
  
###
### Nextcloud Docker Settings
###
nextcloud_enabled: yes
nextcloud_host_data_directory: '/mnt/main/nc'
nextcloud_docker_directory: '{{ docker_home }}/nextcloud'
nextcloud_db_user: vagrant # should probably be admin user acct. or 
nextcloud_db_user_password: vagrant
nextcloud_db_root_password: vagrant
nextcloud_db_memory: 768M
nextcloud_app_memory: 768M
nextcloud_app_port: 10000
nextcloud_app_data_user: www-data
nextcloud_domain: '{{ secret_nextcloud_domain }}'
nextcloud_traefik_enabled: no
nextcloud_trusted_domains: >-
  localhost
  127.0.0.1
  192.168.99.12


###
### UniFi Docker Settings
###
unifi_enabled: yes
unifi_docker_directory: '{{ docker_home }}/unifi'
unifi_traefik_enabled: no
# portainer_memory: 768M # TODO: Come up with sensible memory limit

###
### Traefik
###
traefik_enabled: yes
traefik_data_directory: '{{ docker_home }}/traefik'

# Comments Appendix
# * if when testing things out in nested docker containers you want to make sure that you're testing the presence of the docker install without actually running it - disable the service & don't run it

###
### Secrets (Vagrant Testing Default Passwords, Real Systems on external file)
###
secret_nextcloud_db_root_passwd: vagrant
secret_nextcloud_db_user_passwd: vagrant
secret_nextcloud_db_host: 127.0.0.1
secret_nextcloud_domain: test.local