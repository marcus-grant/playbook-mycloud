---
# This variables file will include all available role variables.
# It makes it easier to know what's available to change.
# defaults file for mydotfiles

### my-common-packages vars
# not shown it's too long and should be changed fairly rarely

### packages for cli-packages install task
# cli_packages:
  # - ffmpeg
  # - lm_sensors
  # - pandoc
  # - python-psutil
  # - python-neovim # consider putting these in a python dev env role?
  # - nodejs # consider putting into a nvm/node/npm role also have it install node neovim helper
  # - npm # same as above
  # - yarn # same as above

# dotfiles root directory, where all seperate dotfiles subdirectories go

# docker install settings geerlingguy.docker github link: http://bit.ly/2HwZPZG
docker_install: yes
docker_edition: 'ce' # ce or ee
docker_package_state: latest # present, absent, or latest
docker_service_state: started # (started) | stopped *
docker_service_enabled: yes # (yes/true) | no/false *
docker_restart_handler_state: restarted # what to do with service after role
docker_install_compose: yes # (true) | false
# docker_compose_version: "1.22.0" defaults to latest, just leave blank for now
docker_compose_path: /usr/local/bin/docker-compose # path to compose bin


# dotfiles role variables
dotfiles_local_root_dir: '~/.dots'
dotfiles_git_server_base_url: 'github.com'
dotfiles_git_username: 'marcus-grant'
dotfiles_use_ssh: true
dotfiles:
  bash:
    repo_name: 'dots-bash'
    local_subdir_name: 'bash'
    version: 'master'
    links:
      - { dest: '~/.bashrc', src: '~/.dots/bash/bashrc' }
      - { dest: '~/.profile', src: '~/.dots/bash/profile' }
      - { dest: '~/.bash_profile', src: '~/.dots/bash/bash_profile' }
  vim:
    repo_name: 'dots-vim'
    local_subdir_name: 'vim'
    version: 'master'
    links:
      - { dest: '~/.vim', src: '~/.dots/vim' }
      - { dest: '~/.vimrc', src: '~/.dots/vim/vimrc' }
  neovim:
    repo_name: 'dots-neovim'
    local_subdir_name: 'neovim'
    version: 'master'
    links:
      - { dest: '~/.config/nvim', src: '~/.dots/neovim' }
  tmux:
    repo_name: 'dots-tmux'
    local_subdir_name: 'tmux'
    version: 'master'
    links:
      - { dest: '~/.tmux.conf', src: '~/.dots/tmux/.tmux.conf' }
      - { dest: '~/.tmux.conf.local', src: '~/.dots/tmux/.tmux.conf.local' }

# ntp role http://bit.ly/2HBSJ67 <- README
ntp_enabled: yes # (true) | false don't use on containerized VM (docker/virtbox)
ntp_timezone: Etc/UTC # (Etc/UTC) | many others
ntp_manage_config: yes # (false) | true, whether to manage /etc/ntp.conf
ntp_area: '' # defaults to none (world), check http://bit.ly/2Hyqoh0 for others
ntp_servers: # defaults to below world pool (only works manage config)
  - "0{{ '.' + ntp_area if ntp_area else '' }}.pool.ntp.org iburst"
  - "1{{ '.' + ntp_area if ntp_area else '' }}.pool.ntp.org iburst"
  - "2{{ '.' + ntp_area if ntp_area else '' }}.pool.ntp.org iburst"
  - "3{{ '.' + ntp_area if ntp_area else '' }}.pool.ntp.org iburst"
ntp_restrict: # whitelists access for these hosts, loopback only by default
  - "127.0.0.1"
  - "::1"
  
# Comments Appendix
# * if when testing things out in nested docker containers you want to make sure that you're testing the presence of the docker install without actually running it - disable the service & don't run it