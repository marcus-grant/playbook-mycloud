---
### General
time_zone: America/New_York
domain_base: '{{ vault_base_domain_ocean }}'


### NTP
# ntp role http://bit.ly/2HBSJ67 <- README
ntp_enabled: true  # (true) | false don't use on containerized VM (docker/vbox)
ntp_timezone: '{{ time_zone }}'  # (Etc/UTC) | many others
ntp_manage_config: true  # (false) | true, whether to manage /etc/ntp.conf
ntp_area: ''  # defaults to none (world), check http://bit.ly/2Hyqoh0 for others
ntp_servers:  # defaults to below world pool (only works manage config)
  - "0{{ '.' + ntp_area if ntp_area else '' }}.pool.ntp.org iburst"
  - "1{{ '.' + ntp_area if ntp_area else '' }}.pool.ntp.org iburst"
  - "2{{ '.' + ntp_area if ntp_area else '' }}.pool.ntp.org iburst"
  - "3{{ '.' + ntp_area if ntp_area else '' }}.pool.ntp.org iburst"
ntp_restrict:  # whitelists access for these hosts, loopback only by default
  - "127.0.0.1"
  - "::1"

### Dotfiles
dotfiles_local_root_dir: '~/.dots'
dotfiles_git_server_base_url: 'github.com'
dotfiles_git_username: 'marcus-grant'
dotfiles_use_ssh: true
dotfiles:
  bash:
    repo_name: 'dots-bash'
    local_subdir_name: 'bash'
    version: 'master'
    links:
      - {dest: '~/.bashrc', src: '~/.dots/bash/bashrc'}
      - {dest: '~/.profile', src: '~/.dots/bash/profile'}
      - {dest: '~/.bash_profile', src: '~/.dots/bash/bash_profile'}
  vim:
    repo_name: 'dots-vim'
    local_subdir_name: 'vim'
    version: 'master'
    links:
      - {dest: '~/.vim', src: '~/.dots/vim'}
      - {dest: '~/.vimrc', src: '~/.dots/vim/vimrc'}
  neovim:
    repo_name: 'dots-neovim'
    local_subdir_name: 'neovim'
    version: 'master'
    links:
      - {dest: '~/.config/nvim', src: '~/.dots/neovim'}
  tmux:
    repo_name: 'dots-tmux'
    local_subdir_name: 'tmux'
    version: 'master'
    links:
      - {dest: '~/.tmux.conf', src: '~/.dots/tmux/.tmux.conf'}
      - {dest: '~/.tmux.conf.local', src: '~/.dots/tmux/.tmux.conf.local'}


### Docker
docker_install: true
docker_edition: ce
docker_home: /mnt/docker
docker_image_directory: '{{ docker_home }}/images'
docker_storage_driver: overlay2
docker_package_state: present
docker_service_enabled: true
docker_restart_handler_state: restarted
docker_install_compose: true
# docker_users (won't be adding admin to this group now for security)
docker_compose_path: /usr/local/bin/docker-compose

### Docker Post Install
docker_group_admin_user: false


### Traefik - Old task version
# traefik_enabled: true
# traefik_data_directory: '{{ docker_home }}/traefik'
# traefik_docker_image: traefik:latest
# traefik_debug: false
# traefik_http_port: 10080
# traefik_https_port: 100443
# traefik_admin_port: 8083
# # double quotes around each full domain with comma then newline delimits
# traefik_certified_domains: >
#   \"next.{{ domain_base }}\"

### Traefik
traefik_enabled: true
traefik_domain: '{{ vault_base_domain_ocean }}'
traefik_admin_email: '{{ vault_admin_email }}'
traefik_admin_encrypted_passwd: '{{ vault_traefik_admin_encrypted_passwd }}'
traefik_dir: '{{ docker_home }}/traefik'
traefik_docker_image: traefik:1.7.6-alpine
traefik_api_entrypoint: dashboard
traefik_api_port: 8080
traefik_docker_network: web
traefik_debug: false



### Nextcloud
nextcloud_enabled: true
nextcloud_primary_storage_type: s3
# nextcloud_host_data_directory: '/mnt/main/nc'
nextcloud_docker_directory: '{{ docker_home }}/nextcloud'
nextcloud_db_user: '{{ vault_nextcloud_db_user }}'
nextcloud_db_user_passwd: '{{ vault_nextcloud_db_user_passwd }}'
nextcloud_db_root_passwd: '{{ vault_nextcloud_db_root_passwd }}'
# nextcloud_db_memory: 768M
# nextcloud_app_memory: 768M
nextcloud_app_port: 10000
nextcloud_app_data_user: www-data
nextcloud_domain: '{{ secret_nextcloud_domain }}'
nextcloud_traefik_enabled: true
nextcloud_trusted_domains: '{{ vault_nextcloud_trusted_domains }}'
